<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="0" total="4" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="7678" started-at="2019-06-03T12:09:33Z" finished-at="2019-06-03T12:09:41Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="7678" started-at="2019-06-03T12:09:33Z" finished-at="2019-06-03T12:09:41Z">
      <class name="com.kaltura.KalturaMainRestTests">
        <test-method status="PASS" signature="initRestApi()[pri:0, instance:com.kaltura.KalturaMainRestTests@683dbc2c]" test-instance-name="Negative Test POST action/login , can&#039;t login with non exist user" name="initRestApi" is-config="true" duration-ms="815" started-at="2019-06-03T12:09:33Z" finished-at="2019-06-03T12:09:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initRestApi -->
        <test-method status="PASS" signature="renameDDTmethod(org.testng.ITestResult, java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:com.kaltura.KalturaMainRestTests@683dbc2c]" test-instance-name="Negative Test POST action/login , can&#039;t login with non exist user" name="renameDDTmethod" is-config="true" duration-ms="2" started-at="2019-06-03T12:09:36Z" finished-at="2019-06-03T12:09:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=POST action/register register new user status=FAILURE method=KalturaMainRestTests.getTasksInfoWithinSpicificPerioud(java.util.Hashtable)[pri:0, instance:com.kaltura.KalturaMainRestTests@683dbc2c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.kaltura.KalturaMainRestTests.getTasksInfoWithinSpicificPerioud(java.util.Hashtable) throws com.fasterxml.jackson.core.JsonProcessingException,java.io.IOException,org.json.JSONException,org.codehaus.jettison.json.JSONException,java.lang.IllegalAccessException,java.lang.IllegalArgumentException,java.lang.reflect.InvocationTargetException]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@28501a4b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- renameDDTmethod -->
        <test-method status="FAIL" signature="getTasksInfoWithinSpicificPerioud(java.util.Hashtable)[pri:0, instance:com.kaltura.KalturaMainRestTests@683dbc2c]" test-instance-name="Negative Test POST action/login , can&#039;t login with non exist user" name="getTasksInfoWithinSpicificPerioud" duration-ms="4186" started-at="2019-06-03T12:09:36Z" data-provider="ExcelFileLoader" finished-at="2019-06-03T12:09:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Description=POST action/register register new user, Request Body={
  "partnerId":185,
  "user": {
    "objectType": "KalturaOTTUser",
    "username": "kalturatest",
    "firstName": "kaltest",
    "lastName": "m375168491",
    "email": "qah153787591@gmail.com",
    "address": "xympdpkyymlh fake address",
    "city": "xympdpkyymlh fake city",
    "countryId": 7,
    "externalId": "ehabmassad12"
  },
  "password": "password"
}, HTTP Response=200,OK, HTTP Method=POST, Expected Headers=Content-Type=application/json, Request Type=application/json, Action=register user and check you got relevant id, Expected Body=, Relative URL=service/ottuser/action/register, Header Authentication=, Request Schema=, Test ID=1}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[validate headers content type expected [application/json] but found [application/json; charset=utf-8]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: validate headers content type expected [application/json] but found [application/json; charset=utf-8]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at kaltura.kaltura.restapi.test.utils.RestValidator.validateHeaders(RestValidator.java:76)
at kaltura.kaltura.restapi.test.utils.RestValidator.validate(RestValidator.java:42)
at kaltura.kaltura.restapi.test.base.BaseRestAPI.validate(BaseRestAPI.java:183)
at com.kaltura.KalturaMainRestTests.runnCall(KalturaMainRestTests.java:52)
at com.kaltura.KalturaMainRestTests.getTasksInfoWithinSpicificPerioud(KalturaMainRestTests.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTasksInfoWithinSpicificPerioud -->
        <test-method status="PASS" signature="renameDDTmethod(org.testng.ITestResult, java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:com.kaltura.KalturaMainRestTests@683dbc2c]" test-instance-name="Negative Test POST action/login , can&#039;t login with non exist user" name="renameDDTmethod" is-config="true" duration-ms="11" started-at="2019-06-03T12:09:40Z" finished-at="2019-06-03T12:09:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Negative Test POST action/register  , can't register exist user status=FAILURE method=KalturaMainRestTests.getTasksInfoWithinSpicificPerioud(java.util.Hashtable)[pri:0, instance:com.kaltura.KalturaMainRestTests@683dbc2c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.kaltura.KalturaMainRestTests.getTasksInfoWithinSpicificPerioud(java.util.Hashtable) throws com.fasterxml.jackson.core.JsonProcessingException,java.io.IOException,org.json.JSONException,org.codehaus.jettison.json.JSONException,java.lang.IllegalAccessException,java.lang.IllegalArgumentException,java.lang.reflect.InvocationTargetException]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@5b051a5c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- renameDDTmethod -->
        <test-method status="FAIL" signature="getTasksInfoWithinSpicificPerioud(java.util.Hashtable)[pri:0, instance:com.kaltura.KalturaMainRestTests@683dbc2c]" test-instance-name="Negative Test POST action/login , can&#039;t login with non exist user" name="getTasksInfoWithinSpicificPerioud" duration-ms="345" started-at="2019-06-03T12:09:40Z" data-provider="ExcelFileLoader" finished-at="2019-06-03T12:09:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Description=Negative Test POST action/register  , can't register exist user, Request Body={
  "partnerId":185,
  "user": {
    "objectType": "KalturaOTTUser",
    "username": "kalturatest",
    "firstName": "kaltest",
    "lastName": "m375168491",
    "email": "qah153787591@gmail.com",
    "address": "xympdpkyymlh fake address",
    "city": "xympdpkyymlh fake city",
    "countryId": 7,
    "externalId": "ehabmassad12"
  },
  "password": "password"
}, HTTP Response=200,OK, HTTP Method=POST, Expected Headers=Content-Type=application/json, Request Type=application/json, Action=register Exist user and check response message, Expected Body=, Relative URL=service/ottuser/action/register, Header Authentication=, Request Schema=, Test ID=2}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[validate headers content type expected [application/json] but found [application/json; charset=utf-8]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: validate headers content type expected [application/json] but found [application/json; charset=utf-8]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at kaltura.kaltura.restapi.test.utils.RestValidator.validateHeaders(RestValidator.java:76)
at kaltura.kaltura.restapi.test.utils.RestValidator.validate(RestValidator.java:42)
at kaltura.kaltura.restapi.test.base.BaseRestAPI.validate(BaseRestAPI.java:183)
at com.kaltura.KalturaMainRestTests.runnCall(KalturaMainRestTests.java:52)
at com.kaltura.KalturaMainRestTests.getTasksInfoWithinSpicificPerioud(KalturaMainRestTests.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTasksInfoWithinSpicificPerioud -->
        <test-method status="PASS" signature="renameDDTmethod(org.testng.ITestResult, java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:com.kaltura.KalturaMainRestTests@683dbc2c]" test-instance-name="Negative Test POST action/login , can&#039;t login with non exist user" name="renameDDTmethod" is-config="true" duration-ms="1" started-at="2019-06-03T12:09:41Z" finished-at="2019-06-03T12:09:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name= POST action/login,login with exist user status=FAILURE method=KalturaMainRestTests.getTasksInfoWithinSpicificPerioud(java.util.Hashtable)[pri:0, instance:com.kaltura.KalturaMainRestTests@683dbc2c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.kaltura.KalturaMainRestTests.getTasksInfoWithinSpicificPerioud(java.util.Hashtable) throws com.fasterxml.jackson.core.JsonProcessingException,java.io.IOException,org.json.JSONException,org.codehaus.jettison.json.JSONException,java.lang.IllegalAccessException,java.lang.IllegalArgumentException,java.lang.reflect.InvocationTargetException]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@639aba11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- renameDDTmethod -->
        <test-method status="FAIL" signature="getTasksInfoWithinSpicificPerioud(java.util.Hashtable)[pri:0, instance:com.kaltura.KalturaMainRestTests@683dbc2c]" test-instance-name="Negative Test POST action/login , can&#039;t login with non exist user" name="getTasksInfoWithinSpicificPerioud" duration-ms="273" started-at="2019-06-03T12:09:41Z" data-provider="ExcelFileLoader" finished-at="2019-06-03T12:09:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Description= POST action/login,login with exist user, Request Body={
 "partnerId": 185,
 "username": "kalturatest",
 "password": "password",
 "extraParams": {
  "'item1'": {
  "objectType": "KalturaStringValue",
  "description": "value",
  "value": "value"
 }
},
 "udid": "value"
}value"
}, HTTP Response=200,OK, HTTP Method=POST, Expected Headers=Content-Type=application/json, Request Type=application/json, Action=login with valid user , Expected Body=, Relative URL=service/ottuser/action/login, Header Authentication=, Request Schema=, Test ID=3}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[validate headers content type expected [application/json] but found [application/json; charset=utf-8]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: validate headers content type expected [application/json] but found [application/json; charset=utf-8]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at kaltura.kaltura.restapi.test.utils.RestValidator.validateHeaders(RestValidator.java:76)
at kaltura.kaltura.restapi.test.utils.RestValidator.validate(RestValidator.java:42)
at kaltura.kaltura.restapi.test.base.BaseRestAPI.validate(BaseRestAPI.java:183)
at com.kaltura.KalturaMainRestTests.runnCall(KalturaMainRestTests.java:52)
at com.kaltura.KalturaMainRestTests.getTasksInfoWithinSpicificPerioud(KalturaMainRestTests.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTasksInfoWithinSpicificPerioud -->
        <test-method status="PASS" signature="renameDDTmethod(org.testng.ITestResult, java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:com.kaltura.KalturaMainRestTests@683dbc2c]" test-instance-name="Negative Test POST action/login , can&#039;t login with non exist user" name="renameDDTmethod" is-config="true" duration-ms="0" started-at="2019-06-03T12:09:41Z" finished-at="2019-06-03T12:09:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Negative Test POST action/login , can't login with non exist user status=FAILURE method=KalturaMainRestTests.getTasksInfoWithinSpicificPerioud(java.util.Hashtable)[pri:0, instance:com.kaltura.KalturaMainRestTests@683dbc2c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.kaltura.KalturaMainRestTests.getTasksInfoWithinSpicificPerioud(java.util.Hashtable) throws com.fasterxml.jackson.core.JsonProcessingException,java.io.IOException,org.json.JSONException,org.codehaus.jettison.json.JSONException,java.lang.IllegalAccessException,java.lang.IllegalArgumentException,java.lang.reflect.InvocationTargetException]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@341672e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- renameDDTmethod -->
        <test-method status="FAIL" signature="getTasksInfoWithinSpicificPerioud(java.util.Hashtable)[pri:0, instance:com.kaltura.KalturaMainRestTests@683dbc2c]" test-instance-name="Negative Test POST action/login , can&#039;t login with non exist user" name="getTasksInfoWithinSpicificPerioud" duration-ms="277" started-at="2019-06-03T12:09:41Z" data-provider="ExcelFileLoader" finished-at="2019-06-03T12:09:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Description=Negative Test POST action/login , can't login with non exist user, Request Body={
 "partnerId": 185,
 "username": "",
 "password": "password"
 "extraParams": {
  "'item1'": {
  "objectType": "KalturaStringValue",
  "description": "value",
  "value": "value"
 }
},
 "udid": "value"
}, HTTP Response=200,OK, HTTP Method=POST, Expected Headers=Content-Type=application/json, Request Type=application/json, Action=login with empty username, Expected Body=, Relative URL=service/ottuser/action/login, Header Authentication=, Request Schema=, Test ID=4}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[validate headers content type expected [application/json] but found [application/json; charset=utf-8]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: validate headers content type expected [application/json] but found [application/json; charset=utf-8]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at kaltura.kaltura.restapi.test.utils.RestValidator.validateHeaders(RestValidator.java:76)
at kaltura.kaltura.restapi.test.utils.RestValidator.validate(RestValidator.java:42)
at kaltura.kaltura.restapi.test.base.BaseRestAPI.validate(BaseRestAPI.java:183)
at com.kaltura.KalturaMainRestTests.runnCall(KalturaMainRestTests.java:52)
at com.kaltura.KalturaMainRestTests.getTasksInfoWithinSpicificPerioud(KalturaMainRestTests.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTasksInfoWithinSpicificPerioud -->
      </class> <!-- com.kaltura.KalturaMainRestTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
